// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ipplhxdvvpcsksqznjsb.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlwcGxoeGR2dnBjc2tzcXpuanNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwODM2NTEsImV4cCI6MjA2MzY1OTY1MX0.ReJ1niDZJ7I5syGOV4Red_rFn5LYMqmLtOR3gV9Fwzg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Function to create an admin client with session header
export const createAdminClient = (sessionId: string) => {
  return createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    global: {
      headers: {
        'x-admin-session-id': sessionId
      }
    }
  });
};

// Get the current admin session ID from localStorage
export const getAdminSessionId = (): string | null => {
  try {
    const adminData = localStorage.getItem('admin');
    if (adminData) {
      const parsed = JSON.parse(adminData);
      return parsed.sessionId || null;
    }
  } catch (error) {
    console.error('Error getting admin session ID:', error);
  }
  return null;
};

// Function to get the appropriate supabase client (admin or regular)
export const getSupabaseClient = () => {
  const sessionId = getAdminSessionId();
  if (sessionId) {
    console.log('Using admin client with session:', sessionId);
    return createAdminClient(sessionId);
  }
  return supabase;
};